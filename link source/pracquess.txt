Practice Question:
In here will be the  practice questions to all the chapters.

chapter 1
page: 28 
source link:

1. Which of the following are operators, and which are values?
---
*
'hello'
-88.8
-
/
+
5
---
2. Which of the following is a variable, and which is a string?
---
spam
'spam'
---
3. Name three data types.
4. What is an expression made up of? What do all expressions do?
5. This chapter introduced assignment statements, like spam = 10. What is
the difference between an expression and a statement?
6. What does the variable bacon contain after the following code runs?
---
bacon = 20
bacon + 1
---
7. What should the following two expressions evaluate to?
---
'spam' + 'spamspam'
'spam' * 3
---
8. Why is eggs a valid variable name while 100 is invalid?
9. What three functions can be used to get the integer, floating-point
number, or string version of a value?
10. Why does this expression cause an error? How can you fix it?
---
'I have eaten ' + 99 + ' burritos.'
---

chapter 2
page: 59 
source link:

1. What are the two values of the Boolean data type? How do you
write them?
2. What are the three Boolean operators?
3. Write out the truth tables of each Boolean operator (that is, every
possible combination of Boolean values for the operator and what
they evaluate to).
4. What do the following expressions evaluate to?
---
(5 > 4) and (3 == 5)
not (5 > 4)
(5 > 4) or (3 == 5)
not ((5 > 4) or (3 == 5))
(True and True) and (True == False)
(not False) or (not True)
---
5. What are the six comparison operators?
6. What is the difference between the equal to operator and the assignment
operator?
7. Explain what a condition is and where you would use one.
8. Identify the three blocks in this code:
---
spam = 0
if spam == 10:
print('eggs')
if spam > 5:
print('bacon')
else:
print('ham')
print('spam')
print('spam')
---
9. Write code that prints Hello if 1 is stored in spam, prints Howdy if 2 is
stored in spam, and prints Greetings! if anything else is stored in spam.
10. What can you press if your program is stuck in an infinite loop?
11. What is the difference between break and continue?
12. What is the difference between range(10), range(0, 10), and range(0, 10, 1)
in a for loop?
13. Write a short program that prints the numbers 1 to 10 using a for loop.
Then write an equivalent program that prints the numbers 1 to 10 using
a while loop.
14. If you had a function named bacon() inside a module named spam, how
would you call it after importing spam?
Extra credit: Look up the round() and abs() functions on the Internet,
and find out what they do. Experiment with them in the interactive shell.

chapter 3
page: 76 
source link:

1. Why are functions advantageous to have in your programs?
2. When does the code in a function execute: when the function is
defined or when the function is called?
3. What statement creates a function?
4. What is the difference between a function and a function call?
5. How many global scopes are there in a Python program? How many
local scopes?
6. What happens to variables in a local scope when the function call returns?
7. What is a return value? Can a return value be part of an expression?
8. If a function does not have a return statement, what is the return value
of a call to that function?
9. How can you force a variable in a function to refer to the global variable?
10. What is the data type of None?
11. What does the import areallyourpetsnamederic statement do?
12. If you had a function named bacon() in a module named spam, how
would you call it after importing spam?
13. How can you prevent a program from crashing when it gets an error?
14. What goes in the try clause? What goes in the except clause?

Practice Projects
For practice, write programs to do the following tasks.
The Collatz Sequence
Write a function named collatz() that has one parameter named number. If
number is even, then collatz() should print number // 2 and return this value.
If number is odd, then collatz() should print and return 3 * number + 1.
Then write a program that lets the user type in an integer and that keeps
calling collatz() on that number until the function returns the value 1.
(Amazingly enough, this sequence actually works for any integer—sooner
or later, using this sequence, you’ll arrive at 1! Even mathematicians aren’t
sure why. Your program is exploring what’s called the Collatz sequence, sometimes
called “the simplest impossible math problem.”)
Remember to convert the return value from input() to an integer with
the int() function; otherwise, it will be a string value.
Hint: An integer number is even if number % 2 == 0, and it’s odd if
number % 2 == 1.
The output of this program could look something like this:
---
Enter number:
3
10
5
16
8
4
2
1
---

Input Validation
Add try and except statements to the previous project to detect whether the
user types in a noninteger string. Normally, the int() function will raise a
ValueError error if it is passed a noninteger string, as in int('puppy'). In the
except clause, print a message to the user saying they must enter an integer.

chapter 4
page: 102 
source link:

1. What is []?
2. How would you assign the value 'hello' as the third value in a list stored
in a variable named spam? (Assume spam contains [2, 4, 6, 8, 10].)
For the following three questions, let’s say spam contains the list ['a',
'b', 'c', 'd'].
3. What does spam[int('3' * 2) / 11] evaluate to?
4. What does spam[-1] evaluate to?
5. What does spam[:2] evaluate to?
For the following three questions, let’s say bacon contains the list
[3.14, 'cat', 11, 'cat', True].
6. What does bacon.index('cat') evaluate to?
7. What does bacon.append(99) make the list value in bacon look like?
8. What does bacon.remove('cat') make the list value in bacon look like?
9. What are the operators for list concatenation and list replication?
10. What is the difference between the append() and insert() list methods?
11. What are two ways to remove values from a list?
12. Name a few ways that list values are similar to string values.
13. What is the difference between lists and tuples?
14. How do you type the tuple value that has just the integer value 42 in it?
15. How can you get the tuple form of a list value? How can you get the list
form of a tuple value?
16. Variables that “contain” list values don’t actually contain lists directly.
What do they contain instead?
17. What is the difference between copy.copy() and copy.deepcopy()?

Practice Projects
For practice, write programs to do the following tasks.
Comma Code
Say you have a list value like this:
---
spam = ['apples', 'bananas', 'tofu', 'cats']
---

Write a function that takes a list value as an argument and returns
a string with all the items separated by a comma and a space, with and
inserted before the last item. For example, passing the previous spam list to
the function would return 'apples, bananas, tofu, and cats'. But your function
should be able to work with any list value passed to it.

chapter 5
page: 119 
source link:

1. What does the code for an empty dictionary look like?
2. What does a dictionary value with a key 'foo' and a value 42 look like?
3. What is the main difference between a dictionary and a list?
4. What happens if you try to access spam['foo'] if spam is {'bar': 100}?
5. If a dictionary is stored in spam, what is the difference between the
expressions 'cat' in spam and 'cat' in spam.keys()?
6. If a dictionary is stored in spam, what is the difference between the
expressions 'cat' in spam and 'cat' in spam.values()?
7. What is a shortcut for the following code?
if 'color' not in spam:
spam['color'] = 'black'
8. What module and function can be used to “pretty print” dictionary
values?

Practice Projects
For practice, write programs to do the following tasks.
Fantasy Game Inventory
You are creating a fantasy video game. The data structure to model the
player’s inventory will be a dictionary where the keys are string values
describing the item in the inventory and the value is an integer value detailing
how many of that item the player has. For example, the dictionary value
{'rope': 1, 'torch': 6, 'gold coin': 42, 'dagger': 1, 'arrow': 12} means the
player has 1 rope, 6 torches, 42 gold coins, and so on.
Write a function named displayInventory() that would take any possible
“inventory” and display it like the following:
Inventory:
12 arrow
42 gold coin
1 rope
6 torch
1 dagger
Total number of items: 62
Hint: You can use a for loop to loop through all the keys in a dictionary.
# inventory.py
stuff = {'rope': 1, 'torch': 6, 'gold coin': 42, 'dagger': 1, 'arrow': 12}
def displayInventory(inventory):
print("Inventory:")
item_total = 0
for k, v in inventory.items():
print(str(v) + ' ' + k)
item_total += v
print("Total number of items: " + str(item_total))
displayInventory(stuff)

chapter 6
page: 170
source link:

1. What is the function that creates Regex objects?
2. Why are raw strings often used when creating Regex objects?
3. What does the search() method return?
4. How do you get the actual strings that match the pattern from a Match
object?
5. In the regex created from r'(\d\d\d)-(\d\d\d-\d\d\d\d)', what does
group 0 cover? Group 1? Group 2?
6. Parentheses and periods have specific meanings in regular expression
syntax. How would you specify that you want a regex to match actual
parentheses and period characters?
7. The findall() method returns a list of strings or a list of tuples of
strings. What makes it return one or the other?
8. What does the | character signify in regular expressions?
9. What two things does the ? character signify in regular expressions?
10. What is the difference between the + and * characters in regular
expressions?
11. What is the difference between {3} and {3,5} in regular expressions?
12. What do the \d, \w, and \s shorthand character classes signify in regular
expressions?
13. What do the \D, \W, and \S shorthand character classes signify in regular
expressions?
14. How do you make a regular expression case-insensitive?
15. What does the . character normally match? What does it match if
re.DOTALL is passed as the second argument to re.compile()?
16. What is the difference between .* and .*??
17. What is the character class syntax to match all numbers and lowercase
letters?
18. If numRegex = re.compile(r'\d+'), what will numRegex.sub('X', '12 drummers,
11 pipers, five rings, 3 hens') return?
19. What does passing re.VERBOSE as the second argument to re.compile()
allow you to do?
20. How would you write a regex that matches a number with commas for
every three digits? It must match the following:
• '42'
• '1,234'
• '6,368,745'
but not the following:
• '12,34,567' (which has only two digits between the commas)
• '1234' (which lacks commas)
21. How would you write a regex that matches the full name of someone
whose last name is Nakamoto? You can assume that the first name that
comes before it will always be one word that begins with a capital letter.
The regex must match the following:
• 'Satoshi Nakamoto'
• 'Alice Nakamoto'
• 'RoboCop Nakamoto'
but not the following:
• 'satoshi Nakamoto' (where the first name is not capitalized)
• 'Mr. Nakamoto' (where the preceding word has a nonletter character)
• 'Nakamoto' (which has no first name)
• 'Satoshi nakamoto' (where Nakamoto is not capitalized)
22. How would you write a regex that matches a sentence where the first
word is either Alice, Bob, or Carol; the second word is either eats, pets, or
throws; the third word is apples, cats, or baseballs; and the sentence ends
with a period? This regex should be case-insensitive. It must match the
following:
• 'Alice eats apples.'
• 'Bob pets cats.'
• 'Carol throws baseballs.'
• 'Alice throws Apples.'
• 'BOB EATS CATS.'
but not the following:
• 'RoboCop eats apples.'
• 'ALICE THROWS FOOTBALLS.'
• 'Carol eats 7 cats.'

Practice Projects
For practice, write programs to do the following tasks.
Strong Password Detection
Write a function that uses regular expressions to make sure the password
string it is passed is strong. A strong password is defined as one that is at
least eight characters long, contains both uppercase and lowercase characters,
and has at least one digit. You may need to test the string against multiple
regex patterns to validate its strength.
Regex Version of strip()
Write a function that takes a string and does the same thing as the strip()
string method. If no other arguments are passed other than the string to
strip, then whitespace characters will be removed from the beginning and
end of the string. Otherwise, the characters specified in the second argument
to the function will be removed from the string.

chapter 7
page: 194 
source link:

1. What is a relative path relative to?
2. What does an absolute path start with?
3. What do the os.getcwd() and os.chdir() functions do?
4. What are the . and .. folders?
5. In C:\bacon\eggs\spam.txt, which part is the dir name, and which part is
the base name?
6. What are the three “mode” arguments that can be passed to the open()
function?
7. What happens if an existing file is opened in write mode?
8. What is the difference between the read() and readlines() methods?
9. What data structure does a shelf value resemble?

Practice Projects
For practice, design and write the following programs.
Extending the Multiclipboard
Extend the multiclipboard program in this chapter so that it has a delete
<keyword> command line argument that will delete a keyword from the shelf.
Then add a delete command line argument that will delete all keywords.

chapter 8
page: 28 
source link:

chapter 9
page: 28 
source link:

chapter 10
page: 28 
source link:

chapter 11
page: 28 
source link:

chapter 12
page: 28 
source link:

chapter 13
page: 28 
source link:

chapter 14
page: 28 
source link:

chapter 15
page: 28 
source link:

chapter 16
page: 28 
source link:

chapter 17
page: 28 
source link:

chapter 18
page: 28 
source link: